@model TIROERP.Core.Model.Visa
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/datepicker")
@Scripts.Render("~/bundles/datepicker")

<link href="~/Content/css/chosen/chosen.css" rel="stylesheet" />
<script src="~/Content/js/chosen/chosen.jquery.js"></script>

<link href="~/Content/js/datepicker/jquery.calendars.picker.css" rel="stylesheet" />
<script src="~/Content/js/datepicker/jquery.plugin.js"></script>
<script src="~/Content/js/datepicker/jquery.calendars.js"></script>
<script src="~/Content/js/datepicker/jquery.calendars.plus.js"></script>
<script src="~/Content/js/datepicker/jquery.calendars.picker.js"></script>
<script src="~/Content/js/datepicker/jquery.calendars.islamic.js"></script>

<script>
    function isAlphaNumeric() {
        var charCode = event.keyCode;
        if ((charCode >= 48 && charCode <= 57) ||
              (charCode >= 65 && charCode <= 90) ||
              (charCode >= 97 && charCode <= 122) || charCode == 32)
            return true;

        return false;
    }

    $(function () {
        function fetchIndianDate(dateObject, alternateDateObject, hiddenDateObject, isIssueDate) {
            alternateDateObject.empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndianDate","Visa")', // we are calling json method
                dataType: 'json',
                data: { date: dateObject.val(), purpose: $("#PURPOSE").val(), isIssueDate: isIssueDate },
                success: function (d) {
                    //var date = new Date(parseInt(d.substr(6)));
                    //var indianDateFormat = date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear();
                    if (isIssueDate == "1") {
                        alternateDateObject.html(d.gregDate);
                        hiddenDateObject.val(d.gregDate);

                        $('#EXPIRY_DATE').val(d.hijriexpirydate);
                        $("#altExpiryDate").html(d.expirydate);
                        $("#INDIAN_FORMAT_EXPIRY_DATE").val(d.expirydate);
                    }
                    else {
                        $("#altExpiryDate").html(d.gregDate);
                        $("#INDIAN_FORMAT_EXPIRY_DATE").val(d.gregDate);
                    }
                },
                error: function (ex) {
                    alternateDateObject.html("");
                    hiddenDateObject.val("");

                }
            });
            return false;
        }
        //	$.calendars.picker.setDefaults({renderer: $.calendars.picker.themeRollerRenderer}); // Requires jquery.calendars.picker.ext.js
        var calendar = $.calendars.instance('islamic');
        $('#ISSUE_DATE').calendarsPicker({
            calendar: calendar,
            dateFormat: "dd/mm/yyyy",
            onSelect: function () {
                fetchIndianDate($('#ISSUE_DATE'), $("#altIssueDate"), $("#INDIAN_FORMAT_ISSUE_DATE"), "1");
            }
        });
        $('#EXPIRY_DATE').calendarsPicker({
            calendar: calendar,
            dateFormat: "dd/mm/yyyy",
            onSelect: function () {
                fetchIndianDate($('#EXPIRY_DATE'), $("#altExpiryDate"), $("#INDIAN_FORMAT_EXPIRY_DATE"), "2");
            }
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#REGISTRATION_NUMBER").chosen();
        $("#PURPOSE").chosen();
        $("#PLACE_OF_ENDORSEMENT").chosen();


        //Fill Civilian No
        $("#REGISTRATION_NUMBER").change(function (e) {
            $("#CIVILIAN_NUMBER").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCivilianNo")', // we are calling json method
                dataType: 'json',
                data: { client_code: $("#REGISTRATION_NUMBER").val() },
                success: function (d) {
                    $("#CIVILIAN_NUMBER").val(d);
                },
                error: function (ex) {
                    $("#CIVILIAN_NUMBER").val("");
                }
            });
            return false;
        });

        $("#RECIEVED_DATE").datepicker({
            changeMonth: true,
            dateFormat: 'dd/mm/yy',
            onClose: function (selectedDate) {
                //$("#FromDate").datepicker("option", "maxDate", selectedDate);
            }
        });

        $("#SaveVisa").click(function (e) {
            var isStepValid = true;

            var regno = $("#REGISTRATION_NUMBER").val();
            if (regno == "") {
                $("#Err_REGISTRATION_NUMBER").text("Please select Client");
                isStepValid = false;
            }
            else {
                $("#Err_REGISTRATION_NUMBER").text("");
            }

            var visano = $("#VISA_NUMBER").val();
            if (visano == "") {
                $("#Err_VISA_NUMBER").text("Please enter Visa Number");
                isStepValid = false;
            }
            else {
                $("#Err_VISA_NUMBER").text("");
            }


            var PURPOSE = $("#PURPOSE").val();
            if (PURPOSE == "") {
                $("#Err_PURPOSE").text("Please select Purpose");
                isStepValid = false;
            }
            else {
                $("#Err_PURPOSE").text("");
            }

            var PLACE_OF_ENDORSEMENT = $("#PLACE_OF_ENDORSEMENT").val();
            if (PLACE_OF_ENDORSEMENT == "") {
                $("#Err_PLACE_OF_ENDORSEMENT").text("Please select Place of Endorsement");
                isStepValid = false;
            }
            else {
                $("#Err_PLACE_OF_ENDORSEMENT").text("");
            }

            var issueDate = $('#ISSUE_DATE').val();
            var expiryDate = $('#EXPIRY_DATE').val();

            if (issueDate == "") {
                $("#Err_ISSUE_DATE").text("Please enter Issue Date");
                isStepValid = false;
            }
            else {
                $("#Err_ISSUE_DATE").text("");
            }

            if (expiryDate == "") {
                $("#Err_ExpiryDate").text("Please enter Expiry Date");
                isStepValid = false;
            }
            else {
                $("#Err_ExpiryDate").text("");
            }


            var RECIEVED_DATE = $('#RECIEVED_DATE').val();
            if (RECIEVED_DATE == "") {
                $("#Err_RECIEVED_DATE").text("Please enter Received Date");
                isStepValid = false;
            }
            else {
                $("#Err_RECIEVED_DATE").text("");
            }

            if (!isStepValid) {
                return false;
            }
            else {
                var issuedt = issueDate.split('/');
                var expirydt = expiryDate.split('/');

                var newissueDt = new Date(issuedt[2], issuedt[1], issuedt[0]);
                var newexpiryDt = new Date(expirydt[2], expirydt[1], expirydt[0]);

                if (newexpiryDt <= newissueDt) {
                    $("#Err_ExpiryDate").text("Expiry date cannot be less than Issue date.");
                    return false;
                }
            }
        });

    });
</script>
@using (Html.BeginForm("Create", "Visa", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <!-- page content -->
    <div class="right_col" role="main">
        <div class="">
            <div class="page-title">
                <div class="title_left">
                    <h3>Visa</h3>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel form-horizontal">
                        <div class="x_title">
                            <h2>Add Visa Details</h2>
                            <div class="clearfix"></div>
                        </div>

                        <div class="x_content">
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Client Name <span class="required">*</span> </label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.DropDownListFor(model => model.REGISTRATION_NUMBER, ViewBag.ClientList as SelectList, "Select Client", new { @id = "REGISTRATION_NUMBER", @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.REGISTRATION_NUMBER, "", new { @class = "text-danger", @id = "Err_REGISTRATION_NUMBER" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Civilian Number</label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.TextBoxFor(model => model.CIVILIAN_NUMBER, new { @id = "CIVILIAN_NUMBER", @class = "form-control", @placeholder = "Civilian Number", @autocomplete = "off", @maxlength = "20", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Visa Number<span class="required">*</span></label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.TextBoxFor(model => model.VISA_NUMBER, new { @id = "VISA_NUMBER", @class = "form-control", @placeholder = "Visa Number", @autocomplete = "off", @maxlength = "20", @onkeypress = "return isAlphaNumeric(event)" })
                                    @Html.ValidationMessageFor(model => model.VISA_NUMBER, "", new { @class = "text-danger", @id = "Err_VISA_NUMBER" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Purpose <span class="required">*</span></label>
                                <div class="col-md-6 col-sm-6">
                                    @{
                                        List<SelectListItem> listPurpose = new List<SelectListItem>();
                                        listPurpose.Add(new SelectListItem
                                        {
                                            Text = "Employment",
                                            Value = "Employment"
                                        });
                                        listPurpose.Add(new SelectListItem
                                        {
                                            Text = "Service",
                                            Value = "Service"
                                        });
                                        listPurpose.Add(new SelectListItem
                                        {
                                            Text = "Family Visit",
                                            Value = "FamilyVisit"
                                        });
                                        listPurpose.Add(new SelectListItem
                                        {
                                            Text = "Resident",
                                            Value = "Resident"
                                        });
                                        listPurpose.Add(new SelectListItem
                                        {
                                            Text = "Business Visit",
                                            Value = "BusinessVisit"
                                        });
                                    }
                                    @Html.DropDownListFor(model => model.PURPOSE, listPurpose, "", new { @id = "PURPOSE", @class = "form-control", @autocomplete = "off", @data_placeholder = "Select Purpose" })
                                    @Html.ValidationMessageFor(model => model.PURPOSE, "", new { @class = "text-danger", @id = "Err_PURPOSE" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Place of Endorsement<span class="required">*</span> </label>
                                <div class="col-md-6 col-sm-6">
                                    @{
                                        List<SelectListItem> listPlaceEndorse = new List<SelectListItem>();
                                        listPlaceEndorse.Add(new SelectListItem
                                        {
                                            Text = "Mumbai",
                                            Value = "Mumbai"
                                        });
                                        listPlaceEndorse.Add(new SelectListItem
                                        {
                                            Text = "Delhi",
                                            Value = "Delhi"
                                        });
                                    }
                                    @Html.DropDownListFor(model => model.PLACE_OF_ENDORSEMENT, listPlaceEndorse, "", new { @id = "PLACE_OF_ENDORSEMENT", @class = "form-control", @autocomplete = "off", @data_placeholder = "Select Place of Endorsement" })
                                    @Html.ValidationMessageFor(model => model.PLACE_OF_ENDORSEMENT, "", new { @class = "text-danger", @id = "Err_PLACE_OF_ENDORSEMENT" })
                                </div>
                            </div>

                            <div class="input-daterange">
                                <div class="form-group">
                                    <label class="control-label col-md-3 col-sm-3">Issue Date<span class="required">*</span></label>
                                    <div class="col-md-3 col-sm-3">
                                        @Html.TextBoxFor(model => model.ISSUE_DATE, new { @id = "ISSUE_DATE", @class = "form-control  date-picker", @placeholder = "Issue Date", @autocomplete = "off", @maxlength = "10", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.ISSUE_DATE, "", new { @class = "text-danger", @id = "Err_ISSUE_DATE" })
                                    </div>
                                    <div class="col-md-3 col-sm-3">
                                        <label id="altIssueDate"></label>
                                        <input type="hidden" id="INDIAN_FORMAT_ISSUE_DATE" name="INDIAN_FORMAT_ISSUE_DATE" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3 col-sm-3">Expiry Date<span class="required">*</span></label>
                                    <div class="col-md-3 col-sm-3">
                                        @Html.TextBoxFor(model => model.EXPIRY_DATE, new { @id = "EXPIRY_DATE", @class = "form-control  date-picker", @placeholder = "Expiry Date", @autocomplete = "off", @maxlength = "10", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.EXPIRY_DATE, "", new { @class = "text-danger", @id = "Err_ExpiryDate" })
                                    </div>
                                    <div class="col-md-3 col-sm-3">
                                        <label id="altExpiryDate"></label>
                                        <input type="hidden" id="INDIAN_FORMAT_EXPIRY_DATE" name="INDIAN_FORMAT_EXPIRY_DATE" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Received On<span class="required">*</span></label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.TextBoxFor(model => model.RECIEVED_DATE, new { @id = "RECIEVED_DATE", @class = "form-control  date-picker", @placeholder = "Received Date", @autocomplete = "off", @maxlength = "10" })
                                    @Html.ValidationMessageFor(model => model.RECIEVED_DATE, "", new { @class = "text-danger", @id = "Err_RECIEVED_DATE" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Upload Report</label>

                                <div class="fileinput fileinput-new col-md-6 col-sm-6" data-provides="fileinput">
                                    <div>
                                        <input type="file" name="visaFile" id="visaFile" style="width: 100%;" />
                                        @Html.HiddenFor(model => model.FILE_PATH)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3">Remark</label>
                                <div class="col-md-6 col-sm-6">
                                    @Html.TextAreaFor(model => model.REMARK, new { @id = "REMARK", @class = "form-control", @placeholder = "Remark", @autocomplete = "off" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                                    <button type="submit" class="btn btn-success" id="SaveVisa">Submit</button>
                                    | @Html.ActionLink("Back to List", "Index")
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                        }
