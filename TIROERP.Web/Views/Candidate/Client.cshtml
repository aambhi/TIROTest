@model TIROERP.Core.Model.Candidate
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/wizard")
@Styles.Render("~/Content/wizard")
@*@Scripts.Render("~/bundles/chosen")
    @Styles.Render("~/Content/chosen")*@
<link href="~/Content/css/chosen/chosen.css" rel="stylesheet" />
<script src="~/Content/js/chosen/chosen.jquery.js"></script>

<script src="~/Content/js/AttachmentUpload.js"></script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "formControl", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <!-- page content -->
    <div class="right_col" role="main">
        <div class="">
            <div class="page-title" style="width:100%">
                <div class="title_left" style="width:100%">
                    <h3>
                        Client <a href="@Url.Action("CandidateSearch", "StatusSearch", new { id = 5 })" class="btn btn-primary pull-right" style="color: white;background-color: #337ab7;"><i class="fa fa-chevron-left"></i> Back </a>
                    </h3>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel">
                        <div class="x_title">
                            <h2>Client</h2>
                            <div class="clearfix"></div>
                        </div>


                        <div class="x_content">
                            @if (@ViewBag.RegNo != null)
                            {
                                string iserror = ViewBag.RegNo;
                                if (iserror.Contains("Error"))
                                {
                            <div class="alert alert-danger alert-dismissable" id="divPostSucsessMsg">
                                <button type="button" class="close" data-dismiss="alert"
                                        aria-hidden="true">
                                    &times;
                                </button>
                                Duplicate Name found
                            </div>
                                }
                                else
                                {
                            <div class="alert alert-success alert-dismissable" id="divPostErrorMsg">
                                <button type="button" class="close" data-dismiss="alert"
                                        aria-hidden="true">
                                    &times;
                                </button>
                                Success! Well done its submitted : @ViewBag.RegNo
                            </div>
                                }
                            }
                            <div class="alert alert-danger alert-dismissable" id="divDupError" style="display:none;">
                                <button type="button" class="close" data-dismiss="alert"
                                        aria-hidden="true">
                                    &times;
                                </button>
                            </div>
                            <div class="alert alert-success alert-dismissable" id="divSuccessMsg" style="display:none;">
                                <button type="button" class="close" data-dismiss="alert"
                                        aria-hidden="true">
                                    &times;
                                </button>
                            </div>
                            <!-- Tabs -->
                            <br />

                            <!-- Smart Wizard -->
                            <div id="wizard" class="form_wizard wizard_horizontal">
                                <ul class="wizard_steps">
                                    <li>
                                        <a href="#step-1">
                                            <span class="step_no">1</span>
                                            <span class="step_descr">
                                                Step 1<br />
                                                <small>Personal Details</small>
                                            </span>
                                        </a>
                                    </li>

                                    <li>
                                        <a href="#step-2">
                                            <span class="step_no">2</span>
                                            <span class="step_descr">
                                                Step 2<br />
                                                <small>Contact Details</small>
                                            </span>
                                        </a>
                                    </li>
                                </ul>

                                <div id="step-1">
                                    <h2 class="StepTitle">Step 1 Personal Details</h2>
                                    <div class="col-md-12" style="margin-top: 10px">
                                        <div class="col-md-9">
                                            <form id="clientForm1" data-parsley-validate class="form-horizontal form-label-left">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4 col-sm-4">Company Name</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.TextBoxFor(model => model.COMPANY_NAME, new { @id = "COMPANY_NAME", @class = "form-control col-md-10", @autocomplete = "off", @placeholder = "Company Name", style = "float: left;", @maxlength = "100", @onkeypress = "return isAlphaNumeric(event)" })
                                                        <div id="autocomplete-container" style="position: relative; float: left; width: 400px;"></div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-md-4 col-sm-4" for="contactPerson">
                                                        Contact Person<span class="required">*</span>
                                                    </label>
                                                    <div class="col-md-3 col-sm-3">
                                                        @Html.TextBoxFor(model => model.FIRST_NAME, new { @id = "FIRST_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "First Name", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)" })
                                                        @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger", @id = "ErrItem_FIRST_NAME" })
                                                    </div>
                                                    <div class="col-md-2 col-sm-2">
                                                        @Html.TextBoxFor(model => model.MIDDLE_NAME, new { @id = "MIDDLE_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Middle Name", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)" })
                                                    </div>
                                                    <div class="col-md-3 col-sm-3">
                                                        @Html.TextBoxFor(model => model.LAST_NAME, new { @id = "LAST_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Last Name", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)" })
                                                        @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger", @id = "ErrItem_LAST_NAME" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="Industry" class="control-label col-md-4 col-sm-4">Industry</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.DropDownListFor(model => model.INDUSTRY, (SelectList)ViewData["GetIndustryDesignation"], new { @class = "form-control", @multiple = "multiple", @placeholder = "--Select Industry--", @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="Designation" class="control-label col-md-4 col-sm-4">Designation</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.DropDownListFor(model => model.DESIGNATION, new SelectList(""), new { @class = "form-control", @placeholder = "--Select Designation--", @multiple = "multiple", @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="Reference" class="control-label col-md-4 col-sm-4">Reference</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.TextBoxFor(model => model.REFERENCE, new { @id = "REFERENCE", @class = "form-control col-md-7 col-xs-12", @placeholder = "Reference", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)" })
                                                    </div>
                                                </div>


                                                <div class="form-group">
                                                    <label for="Reference" class="control-label col-md-4 col-sm-4">Civlian No</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.TextBoxFor(model => model.CIVILIAN_NO, new { @id = "CIVILIAN_NO", @class = "form-control col-md-7 col-xs-12", @placeholder = "Civilian No", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="middle-name" class="control-label col-md-4 col-sm-4">Remark</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.TextAreaFor(model => model.REMARK, new { @id = "REMARK", @class = "resizable_textarea form-control", @placeholder = "Remark", @autocomplete = "off", @style = "width: 100%; overflow: hidden; word-wrap: break-word; resize: horizontal; height: 87px;" })
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="col-md-3">

                                            <div class="fileinput fileinput-new" data-provides="fileinput">
                                                <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;"></div>
                                                <div>
                                                    <span class="btn btn-default btn-file"><span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span><input type="file" name="..." id="SaveImage"></span>
                                                    <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                                                    @Html.HiddenFor(model => model.FILE_PATH)
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="step-2">
                                    <h2 class="StepTitle">Step 2 Contact Details</h2>
                                    <form id="clientForm2" class="form-horizontal form-label-left">

                                        @Html.Partial("~/Views/Shared/_Address.cshtml")
                                        @Html.Partial("~/Views/Shared/_Contact.cshtml")
                                        @Html.Partial("~/Views/Shared/_Email.cshtml")

                                        <div class="form-group">
                                            <label for="middle-name" class="control-label col-md-3 col-sm-3">Website</label>
                                            <div class="col-md-6 col-sm-6">
                                                @Html.TextBoxFor(model => model.WEBSITE, new { @id = "WEBSITE", @class = " form-control col-md-7 col-xs-12", @placeholder = "Website", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)", @tabindex = "52" })

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="middle-name" class="control-label col-md-3 col-sm-3">Skype</label>
                                            <div class="col-md-6 col-sm-6">
                                                @Html.TextBoxFor(model => model.SKYPE, new { @id = "SKYPE", @class = " form-control col-md-7 col-xs-12", @placeholder = "Skype", @autocomplete = "off", @maxlength = "50", @onkeypress = "return isAlphaNumeric(event)", @tabindex = "53" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3 col-sm-3">Remark</label>
                                            <div class="col-md-6 col-sm-6">
                                                @Html.TextAreaFor(model => model.CONTACT_REMARK, new { @id = "CONTACT_REMARK", @class = " form-control col-md-7 col-xs-12", @placeholder = "Remark", @autocomplete = "off", @maxlength = "1000", @tabindex = "54" })
                                            </div>
                                        </div>
                                        @Html.HiddenFor(model => model.USER_TYPE_ID)
                                    </form>
                                </div>
                            </div>
                            <!-- End SmartWizard Content -->

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*For Progress Bar*@
    <div id="progressBar" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
                top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
                opacity: .8; filter: alpha(opacity=70);display:none">
        <p style="position: fixed; top: 20%; left: 30%; color: White;">
            <img src="@Url.Content("~/Content/img/please_wait.gif")">
        </p>
    </div>
    @*For Progress Bar [end]*@
}
<script type="text/javascript">

    var addressCollection = new Array();
    var contactCollection = new Array();
    var emailCollection = new Array();

    function isAlphaNumeric() {
        var charCode = event.keyCode;
        if ((charCode >= 48 && charCode <= 57) ||
              (charCode >= 65 && charCode <= 90) ||
              (charCode >= 97 && charCode <= 122) || charCode == 32 || charCode == 46)
            return true;

        return false;
    }

    $(document).ready(function () {

        $("#INDUSTRY").chosen();
        $("#DESIGNATION").chosen();

        $("#REMARK").focusout(function () {
            $(".btn-success").focus();
        });

        $("#CONTACT_REMARK").focusout(function () {
            $(".btn-default").focus();
        });

        $("#INDUSTRY").change(function () {
            $("#DESIGNATION").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndustryDesignation")',
                data: { code: $("#INDUSTRY").val() },
                dataType: "json",
                async: true,
                success: function (states) {
                    if (states == "SessionTimeout") {
                        window.location.href = '@Url.Action("LogOut", "Login")';
                    }

                    $("#DESIGNATION").append('<option value="0">--Select Designation--</option>');
                    $.each(states.selectList, function (i, state) {
                        $("#DESIGNATION").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                    $("#DESIGNATION").trigger("chosen:updated");
                },
                error: function (ex) {
                    $("#DESIGNATION").append('<option value="0">--Select Designation--</option>');
                }
            });
            return false;
        })


        $('#wizard').smartWizard({
            keyNavigation: false,
            onLeaveStep: leaveAStepCallback,
            onFinish: onFinishCallback
        });

        function leaveAStepCallback(obj, context) {
            return validateSteps(context.fromStep, context.toStep); // return false to stay on step and true to continue navigation
        }

        function onFinishCallback(objs, context) {
            if (validateAllSteps()) {

                var urlLink = '@Url.Action("Create", "Candidate")';

                var formdata = JSON.stringify({
                    "LST_USER_ADDRESS": addressCollection,
                    "LST_USER_CONTACT": contactCollection,
                    "LST_USER_EMAIL": emailCollection,

                    "FIRST_NAME": $("#FIRST_NAME").val(),
                    "LAST_NAME": $("#LAST_NAME").val(),
                    "CLINIC_NAME": $("#CLINIC_NAME").val(),
                    "MIDDLE_NAME": $("#MIDDLE_NAME").val(),
                    "GAMCA_NO": $("#GAMCA_NO").val(),
                    "FILE_PATH": $("#FILE_PATH").val(),
                    "REMARK": $("#REMARK").val(),
                    "WEBSITE": $("#WEBSITE").val(),
                    "SKYPE": $("#SKYPE").val(),
                    "CONTACT_REMARK": $("#CONTACT_REMARK").val(),

                    "COMPANY_NAME": $("#COMPANY_NAME").val(),
                    "CIVILIAN_NO": $("#CIVILIAN_NO").val(),
                    "REFERENCE": $("#REFERENCE").val(),
                    "INDUSTRY": $("#INDUSTRY").val(),
                    "DESIGNATION": $("#DESIGNATION").val(),
                    "USER_TYPE_ID": $("#USER_TYPE_ID").val()
                });

                $.ajax({
                    contentType: "application/json",
                    type: 'POST',
                    url: urlLink,
                    traditional: true,
                    data: formdata,
                    dataType: "json",
                    async: true,
                    success: function (d) {
                        if (d == "SessionTimeout") {
                            window.location.href = '@Url.Action("LogOut", "Login")';
                        }
                        $('#progressBar').hide();
                        $('#divPostErrorMsg').hide();
                        $('#divPostSucsessMsg').hide();
                        if (d.regno.indexOf("Error") >= 0) {
                            $("#divDupError").html(d.regno);
                            $("#divDupError").show();
                            return false;
                        }
                        window.location.href = '@Url.Action("Create", "Candidate")' + '?id=' + d.USER_TYPE_ID + '&RegNo=' + d.regno;
                    },
                    error: function (ex) {
                        $('#progressBar').hide();
                    }
                });
                return false;
            }
        }

        // Your Step validation logic
        function validateSteps(stepnumber, toStep) {
            var isStepValid = true;
            if (stepnumber > toStep)
                return isStepValid;

            // validate step 1
            if (stepnumber == 1) {
                $("body").scrollTop(0);
                // Your step validation logic
                // set isStepValid = false if has errors

                var firstname = $("#FIRST_NAME").val();
                if (firstname == "") {
                    $("#ErrItem_FIRST_NAME").text("Please enter First Name");
                    isStepValid = false;
                }
                else {
                    $("#ErrItem_FIRST_NAME").text("");
                }

                var lastname = $("#LAST_NAME").val();
                if (lastname == "") {
                    $("#ErrItem_LAST_NAME").text("Please enter Last Name");
                    isStepValid = false;
                }
                else {
                    $("#ErrItem_LAST_NAME").text("");
                }
                if (isStepValid) {
                    //Duplication Check
                    var urlLink = '@Url.Action("DuplicateCheck", "Candidate")';
                    $('#progressBar').show();
                    $.ajax({
                        contentType: "application/json",
                        type: 'GET',
                        url: urlLink,
                        traditional: true,
                        data: {
                            "FIRST_NAME": $("#FIRST_NAME").val(),
                            "LAST_NAME": $("#LAST_NAME").val(),
                            "USER_TYPE_ID": $("#USER_TYPE_ID").val()
                        },
                        dataType: "json",
                        async: true,
                        success: function (d) {
                            if (d == "SessionTimeout") {
                                window.location.href = '@Url.Action("LogOut", "Login")';
                            }
                            if (d) {
                                $("#divDupError").html("Record Already Exists.");
                                $("#divDupError").show();
                            }
                            else {
                                $("#divDupError").hide();
                            }
                            $('#progressBar').hide();
                            isStepValid = false;
                        },
                        error: function (ex) {
                            $('#progressBar').hide();
                            $("#divSuccessMsg").hide();
                            $("#divDupError").hide();
                        }
                    });
                }
                return isStepValid;
            }
            else if (stepnumber == 2) {
                $("body").scrollTop(0);

                var tbladdresscount = $('#tblchild').children().length;
                if (tbladdresscount < 1) {
                    $("#Err_ADDRESS_TYPE_ID").text("Please select Address Type");
                    $("#Err_ADDRESS").text("Please enter Address details");
                    $("#Err_COUNTRY_CODE").text("Please select Country");
                    $("#Err_STATE_CODE").text("Please select State");
                    $("#Err_USER_PINCODE").text("Please enter Pin Code");
                    isStepValid = false;
                }

                var tblcontactcount = $('#tblcontact').children().length;
                if (tblcontactcount < 1) {
                    $("#Err_CONTACT_TYPE_ID").text("Please select Contact Type");
                    $("#Err_CONTACT_NO").text("Please enter Contact no.");
                    isStepValid = false;
                }

                return isStepValid;
            }

            // ...
        }
        function validateAllSteps() {
            var isStepValid = true;

            // all step validation logic

            var firstname = $("#FIRST_NAME").val();
            if (firstname == "") {
                $("#ErrItem_FIRST_NAME").text("Please enter First Name");
                isStepValid = false;
            }
            else {
                $("#ErrItem_FIRST_NAME").text("");
            }

            var lastname = $("#LAST_NAME").val();
            if (lastname == "") {
                $("#ErrItem_LAST_NAME").text("Please enter Last Name");
                isStepValid = false;
            }
            else {
                $("#ErrItem_LAST_NAME").text("");
            }
            var tbladdresscount = $('#tblchild').children().length;
            if (tbladdresscount < 1) {
                $("#Err_ADDRESS_TYPE_ID").text("Please select Address Type");
                $("#Err_ADDRESS").text("Please enter Address details");
                $("#Err_COUNTRY_CODE").text("Please select Country");
                $("#Err_STATE_CODE").text("Please select State");
                $("#Err_USER_PINCODE").text("Please enter Pin Code");
                isStepValid = false;
            }

            var tblcontactcount = $('#tblcontact').children().length;
            if (tblcontactcount < 1) {
                $("#Err_CONTACT_TYPE_ID").text("Please select Contact Type");
                $("#Err_CONTACT_NO").text("Please enter Contact no.");
                isStepValid = false;
            }

            return isStepValid;
        }

        $("#SaveImage").change(function (e) {
            var file = e.target.files;
            var path = UploadAttachment(file, "Client");
        });

        function UploadAttachment(file, uploadFrom) {
            var path = "";
            if (file.length > 0) {
                var isvalid = checkImagefile(file);
                if (isvalid) {
                    var data = new FormData();

                    // Add the uploaded image content to the form data collection
                    data.append("UploadedImage", file[0]);
                    data.append("UploadFrom", uploadFrom);

                    // Make Ajax request with the contentType = false, and procesDate = false
                    var ajaxRequest = $.ajax({
                        type: "POST",
                        url: '@Url.Action("UploadImageFile", "StatusSearch")',
                        contentType: false,
                        processData: false,
                        data: data
                    });

                    ajaxRequest.done(function (xhr, textStatus) {
                        if (xhr == "SessionTimeout") {
                            window.location.href = '@Url.Action("LogOut", "Login")';
                        }
                        // Do other operation
                        path = xhr;
                        $("#FILE_PATH").val(path);
                    });
                }
            }
            else {
                path = "";
                $("#FILE_PATH").val(path);
            }
        }

    });
</script>
