@model TIROERP.Core.Model.Agent
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/bundles/wizard")
@Styles.Render("~/Content/wizard")
@Scripts.Render(("~/bundles/select2"))
@Styles.Render("~/Content/select2")

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "formControl", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <!-- page content -->
    <div class="right_col" role="main">
        <div class="">
            <div class="page-title">
                <div class="title_left">
                    <h3>Client</h3>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel">
                        <div class="x_title">
                            <h2>Doctor</h2>
                            <div class="clearfix"></div>
                        </div>


                        <div class="x_content">
                            @if (@ViewBag.RegNo != null)
                            {
                                <div class="alert alert-success alert-dismissable">
                                    <button type="button" class="close" data-dismiss="alert"
                                            aria-hidden="true">
                                        &times;
                                    </button>
                                    Success! Well done its submitted : @ViewBag.RegNo
                                </div>
                            }

                            <!-- Tabs -->
                            <br />

                            <!-- Smart Wizard -->
                            <div id="wizard" class="form_wizard wizard_horizontal">
                                <ul class="wizard_steps">
                                    <li>
                                        <a href="#step-1">
                                            <span class="step_no">1</span>
                                            <span class="step_descr">
                                                Step 1<br />
                                                <small>Personal Details</small>
                                            </span>
                                        </a>
                                    </li>

                                    <li>
                                        <a href="#step-2">
                                            <span class="step_no">2</span>
                                            <span class="step_descr">
                                                Step 2<br />
                                                <small>Contact Details</small>
                                            </span>
                                        </a>
                                    </li>
                                </ul>

                                <div id="step-1">
                                    <h2 class="StepTitle">Step 1 Personal Details</h2>
                                    <div class="col-md-12" style="margin-top: 10px">
                                        <div class="col-md-9">
                                            <form id="clientForm1" data-parsley-validate class="form-horizontal form-label-left">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4 col-sm-4" for="contactPerson">
                                                        Full Name<span class="required">*</span>
                                                    </label>
                                                    <div class="col-md-3 col-sm-3">
                                                        @Html.TextBoxFor(model => model.FIRST_NAME, new { @id = "FIRST_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "First Name", @autocomplete = "off", @maxlength = "50" })
                                                        @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger", @id = "ErrItem_FIRST_NAME" })
                                                    </div>
                                                    <div class="col-md-2 col-sm-2">
                                                        @Html.TextBoxFor(model => model.MIDDLE_NAME, new { @id = "MIDDLE_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Middle Name", @autocomplete = "off", @maxlength = "50" })
                                                    </div>
                                                    <div class="col-md-3 col-sm-3">
                                                        @Html.TextBoxFor(model => model.LAST_NAME, new { @id = "LAST_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Last Name", @autocomplete = "off", @maxlength = "50" })
                                                        @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger", @id = "ErrItem_LAST_NAME" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="Industry" class="control-label col-md-4 col-sm-4">Industry</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.DropDownListFor(model => model.INDUSTRY, (SelectList)ViewData["GetIndustryDesignation"], new { @class = "form-control", @multiple = "multiple", @placeholder = "--Select Industry--", @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="Designation" class="control-label col-md-4 col-sm-4">Designation</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.DropDownListFor(model => model.DESIGNATION, new SelectList(""), new { @class = "form-control", @placeholder = "--Select Designation--", @multiple = "multiple", @autocomplete = "off" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="Reference" class="control-label col-md-4 col-sm-4">Current Location</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.DropDownListFor(model=>model.CURRENT_LOCATION, (SelectList)ViewData["GetCurrentLocaton"], "--Select Current Location--", new { @class = "form-control", @autocomplete = "off" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label for="middle-name" class="control-label col-md-4 col-sm-4">Remark</label>
                                                    <div class="col-md-8 col-sm-8">
                                                        @Html.TextAreaFor(model => model.REMARK, new { @id = "REMARK", @class = "resizable_textarea form-control", @placeholder = "Remark", @autocomplete = "off", @style = "width: 100%; overflow: hidden; word-wrap: break-word; resize: horizontal; height: 87px;" })
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="col-md-3">

                                            <div class="fileinput fileinput-new" data-provides="fileinput">
                                                <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;"></div>
                                                <div>
                                                    <span class="btn btn-default btn-file"><span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span><input type="file" name="..." id="SaveImage"></span>
                                                    <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                                                    @Html.HiddenFor(model => model.FILE_PATH)
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="step-2">
                                    <h2 class="StepTitle">Step 2 Contact Details</h2>
                                    <form id="clientForm2" class="form-horizontal form-label-left">

                                        @Html.Partial("~/Views/Shared/_Address.cshtml")
                                        @Html.Partial("~/Views/Shared/_Contact.cshtml")
                                        @Html.Partial("~/Views/Shared/_Email.cshtml")

                                        <div class="form-group">
                                            <label for="middle-name" class="control-label col-md-3 col-sm-3">Website</label>
                                            <div class="col-md-6 col-sm-6">
                                                @Html.TextBoxFor(model => model.WEBSITE, new { @id = "WEBSITE", @class = " form-control col-md-7 col-xs-12", @placeholder = "Website", @autocomplete = "off" })

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="middle-name" class="control-label col-md-3 col-sm-3">Skype</label>
                                            <div class="col-md-6 col-sm-6">
                                                @Html.TextBoxFor(model => model.SKYPE, new { @id = "SKYPE", @class = " form-control col-md-7 col-xs-12", @placeholder = "Skype", @autocomplete = "off" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3 col-sm-3">Remark</label>
                                            <div class="col-md-6 col-sm-6">
                                                @Html.TextAreaFor(model => model.CONTACT_REMARK, new { @id = "CONTACT_REMARK", @class = " form-control col-md-7 col-xs-12", @placeholder = "Remark", @autocomplete = "off" })
                                            </div>
                                        </div>

                                    </form>
                                </div>
                            </div>
                            <!-- End SmartWizard Content -->

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">

    var addressCollection = new Array();
    var contactCollection = new Array();
    var emailCollection = new Array();

    $(document).ready(function () {

        $("#INDUSTRY").select2();
        $("#DESIGNATION").select2();
        $("#CURRENT_LOCATION").select2();

        $("#INDUSTRY").change(function () {
            $("#DESIGNATION").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndustryDesignation")',
                dataType: 'json',
                data: { code: $("#INDUSTRY").val()},
                success: function (states) {
                    $("#DESIGNATION").append('<option value="0">--Select Designation--</option>');
                    $.each(states, function (i, state) {
                        $("#DESIGNATION").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    $("#DESIGNATION").append('<option value="0">--Select Designation--</option>');
                }
            });
            return false;
        })


        $('#wizard').smartWizard({
            onLeaveStep: leaveAStepCallback,
            onFinish: onFinishCallback
        });

        function leaveAStepCallback(obj, context) {
            return validateSteps(context.fromStep); // return false to stay on step and true to continue navigation
        }

        function onFinishCallback(objs, context) {
            if (validateAllSteps()) {

                var addressHtml = "";
                var counter = 0;

                //_.each(addressCollection, function (d) {
                //    addressHtml += '<div id="LST_USER_ADDRESS' + (counter) + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].ADDRESS_TYPE_ID" value="' + d.ADDRESS_TYPE_ID + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].ADDRESS" value="' + d.ADDRESS + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].CITY_CODE" value="' + d.CITY_CODE + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].USER_VILLAGE" value="' + d.USER_VILLAGE + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].USER_PINCODE" value="' + d.USER_PINCODE + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].COUNTRY_CODE" value="' + d.COUNTRY_CODE + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].STATE_CODE" value="' + d.STATE_CODE + '">';
                //    addressHtml += '<input type="hidden" name="LST_USER_ADDRESS[' + (counter) + '].IsNew" value="' + d.IsNew + '"></div>';
                //    counter++;
                //});

                //$("#divAddressDetail").append(addressHtml);

                //$('#formControl').submit();

                var urlLink = '@Url.Action("Create", "Agent")';

                var formdata = JSON.stringify({
                    "LST_USER_ADDRESS": addressCollection,
                    "LST_USER_CONTACT": contactCollection,
                    "LST_USER_EMAIL": emailCollection,

                    "FIRST_NAME": $("#FIRST_NAME").val(),
                    "LAST_NAME": $("#LAST_NAME").val(),
                    "CURRENT_LOCATION": $("#CURRENT_LOCATION").val(),
                    "MIDDLE_NAME": $("#MIDDLE_NAME").val(),
                    "FILE_PATH": $("#FILE_PATH").val(),
                    "REMARK": $("#REMARK").val(),
                    "WEBSITE": $("#WEBSITE").val(),
                    "SKYPE": $("#SKYPE").val(),
                    "CONTACT_REMARK": $("#CONTACT_REMARK").val(),
                    "INDUSTRY": $("#INDUSTRY").val(),
                    "DESIGNATION": $("#DESIGNATION").val()
                });

                $.ajax({
                    contentType: "application/json",
                    type: 'POST',
                    url: urlLink,
                    traditional: true,
                    data: formdata,
                    success: function (d) {
                        urlLink = urlLink + "?id=" + d;
                        window.location.href = urlLink;
                    }
                });
                return false;


            }
        }

        // Your Step validation logic
        function validateSteps(stepnumber) {
            var isStepValid = true;
            // validate step 1
            if (stepnumber == 1) {
                // Your step validation logic
                // set isStepValid = false if has errors

                var firstname = $("#FIRST_NAME").val();
                if (firstname == "") {
                    $("#ErrItem_FIRST_NAME").text("Please enter First Name");
                    isStepValid = false;
                }
                else {
                    $("#ErrItem_FIRST_NAME").text("");
                }

                var lastname = $("#LAST_NAME").val();
                if (lastname == "") {
                    $("#ErrItem_LAST_NAME").text("Please enter Last Name");
                    isStepValid = false;
                }
                else {
                    $("#ErrItem_LAST_NAME").text("");
                }

                return isStepValid;
            }
            else if (stepnumber == 2) {

                var tbladdresscount = $('#tblchild').children().length;
                if (tbladdresscount < 1) {
                    $("#Err_ADDRESS_TYPE_ID").text("Please select Address Type");
                    $("#Err_ADDRESS").text("Please enter Address details");
                    $("#Err_COUNTRY_CODE").text("Please select Country");
                    $("#Err_STATE_CODE").text("Please select State");
                    $("#Err_CITY_CODE").text("Please select City");
                    $("#Err_USER_PINCODE").text("Please enter Pin Code");
                    isStepValid = false;
                }


                var tblemailcount = $('#tblemail').children().length;
                if (tblemailcount < 1) {
                    $("#Err_USER_EMAIL").text("Please enter Email Id");
                    isStepValid = false;
                }

                var tblcontactcount = $('#tblcontact').children().length;
                if (tblcontactcount < 1) {
                    $("#Err_CONTACT_TYPE_ID").text("Please select Contact Type");
                    $("#Err_CONTACT_NO").text("Please enter Contact no.");
                    isStepValid = false;
                }

                return isStepValid;
            }

            // ...
        }
        function validateAllSteps() {
            var isStepValid = true;

            // all step validation logic

            var firstname = $("#FIRST_NAME").val();
            if (firstname == "") {
                $("#ErrItem_FIRST_NAME").text("Please enter First Name");
                isStepValid = false;
            }
            else {
                $("#ErrItem_FIRST_NAME").text("");
            }

            var lastname = $("#LAST_NAME").val();
            if (lastname == "") {
                $("#ErrItem_LAST_NAME").text("Please enter Last Name");
                isStepValid = false;
            }
            else {
                $("#ErrItem_LAST_NAME").text("");
            }
            var tbladdresscount = $('#tblchild').children().length;
            if (tbladdresscount < 1) {
                $("#Err_ADDRESS_TYPE_ID").text("Please select Address Type");
                $("#Err_ADDRESS").text("Please enter Address details");
                $("#Err_COUNTRY_CODE").text("Please select Country");
                $("#Err_STATE_CODE").text("Please select State");
                $("#Err_CITY_CODE").text("Please select City");
                $("#Err_USER_PINCODE").text("Please enter Pin Code");
                isStepValid = false;
            }


            var tblemailcount = $('#tblemail').children().length;
            if (tblemailcount < 1) {
                $("#Err_USER_EMAIL").text("Please enter Email Id");
                isStepValid = false;
            }

            var tblcontactcount = $('#tblcontact').children().length;
            if (tblcontactcount < 1) {
                $("#Err_CONTACT_TYPE_ID").text("Please select Contact Type");
                $("#Err_CONTACT_NO").text("Please enter Contact no.");
                isStepValid = false;
            }

            return isStepValid;
        }


        $("#SaveImage").change(function (e) {
            checkImagefile();

            var data = new FormData();
            var files = $("#SaveImage").get(0).files;

            // Add the uploaded image content to the form data collection
            if (files.length > 0) {
                data.append("UploadedImage", files[0]);
            }

            // Make Ajax request with the contentType = false, and procesDate = false
            var ajaxRequest = $.ajax({
                type: "POST",
                url: '@Url.Action("UploadImageFile")',
                contentType: false,
                processData: false,
                data: data
            });

            ajaxRequest.done(function (xhr, textStatus) {
                // Do other operation
                $("#FILE_PATH").val(xhr);
            });
        });

    });

    //Check Image File
    function checkImagefile() {

        var file = getNameFromPath($("#SaveImage").val());
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            //alert(extension);
            switch (extension) {
                case 'gif':
                    flag = true;
                    break;
                case 'jpeg':
                    flag = true;
                    break;
                case 'png':
                    flag = true;
                    break;
                case 'gif':
                    flag = true;
                    break;
                case 'jpg':
                    flag = true;
                    break;
                case 'bmp':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }
        if (flag == false) {
            alert("You can upload only .jpg/.jpeg/.png/.bmp/.gif extension file");
            $("#SaveImage").val('');
            return false;
        }
        else {
            if (file != null) {
                var maxfilesize = 1;

                var size = GetFileSize('SaveImage');
                if (size > maxfilesize) {
                    alert("You can upload file up to " + maxfilesize + " MB");
                    return false;
                }
            }
        }
    }


    //get file size
    function GetFileSize(fileid) {
        try {
            var fileSize = 0;
            //for FF, Safari, Opeara and Others
            fileSize = $("#" + fileid)[0].files[0].size //size in kb
            fileSize = fileSize / 1024000; //size in mb
            return fileSize;
        }
        catch (e) {
            alert("Error is :" + e);
        }
    }

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    function checkfile() {
        var file = getNameFromPath($("#FILE_PATH").val());
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));

            // alert(extension);
            switch (extension) {
                case 'doc':
                    flag = true;
                    break;
                case 'bmp':
                    flag = true;
                    break;
                case 'docx':
                    flag = true;
                    break;
                case 'jpeg':
                    flag = true;
                    break;
                case 'png':
                    flag = true;
                    break;
                case 'gif':
                    flag = true;
                    break;
                case 'jpg':
                    flag = true;
                    break;
                case 'pdf':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }
        if (flag == false) {
            $("#FILE_PATH").val('');
            alert("You can upload only .doc/.docx/.jpg/.jpeg/.png/.bmp/.pdf extension file");
            return false;
        }
        else {
            if (file != null) {
                var maxfilesize = 1;

                var size = GetFileSize('FILE_PATH');
                if (size > maxfilesize) {
                    alert("You can upload file up to " + maxfilesize + " MB");
                    return false;
                }
            }
        }
    }

    $(function () {
        $("#FILE_PATH").change(function () {
            checkfile();
        });
    });
</script>
