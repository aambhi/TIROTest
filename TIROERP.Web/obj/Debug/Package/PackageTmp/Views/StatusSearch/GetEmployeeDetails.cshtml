@model TIROERP.Core.Model.Candidate
@{
    ViewBag.Title = "GetCandidateDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string imagepath = string.Empty;
    string noimagepath = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["NoImageFile"]);
    if (!string.IsNullOrEmpty(Model.FILE_PATH))
    {
        imagepath = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["ImageFile"]) + "/Uploads/CandidateUploadedFiles/" + Model.FILE_PATH;
    }
}
@Scripts.Render("~/bundles/wizard")
@Styles.Render("~/Content/wizard")
@Scripts.Render(("~/bundles/datepicker"))
@Styles.Render("~/Content/datepicker")
@*@Scripts.Render(("~/bundles/select2"))
@Styles.Render("~/Content/select2")*@

<script src="~/Content/js/mask/jquery.inputmask.js"></script>
<script src="~/Content/js/mask/mask.js"></script>

<script src="~/Content/js/underscore/underscore.js"></script>
<script src="~/Content/js/Employee_Details.js"></script>
<script src="~/Content/js/AttachmentUpload.js"></script>
<link href="~/Content/css/chosen/chosen.css" rel="stylesheet" />
<script src="~/Content/js/chosen/chosen.jquery.js"></script>
<style>
    .panel-group .panel {
        border-radius: 0;
        box-shadow: none;
        border-color: #EEEEEE;
    }

    .panel-default > .panel-heading {
        padding: 0;
        border-radius: 0;
        color: #212121;
        background-color: #FAFAFA;
        border-color: #EEEEEE;
    }

    .panel-title {
        font-size: 14px;
    }

        .panel-title > a {
            display: block;
            padding: 15px;
            text-decoration: none;
            font-size: 16px;
            color: #73879C;
            background-color: #fff;
        }

    .more-less {
        float: right;
        color: #212121;
    }

    .panel-default > .panel-heading + .panel-collapse > .panel-body {
        border-top-color: #EEEEEE;
    }

    .panel-body .panel-body {
        padding: 6px 5px;
    }
</style>

@using (Html.BeginForm("", "", FormMethod.Get, new { @id = "formControl" }))
{
    @Html.AntiForgeryToken()

    <!-- page content -->
    <div class="right_col" role="main">
        <div class="">
            <div class="page-title" style="width:100%">
                <div class="title_left" style="width:100%">
                    <h3>
                        View Employee Details <a href="@Url.Action("CandidateSearch", "StatusSearch", new { id = 2 })" class="btn btn-primary pull-right" style="color: white;background-color: #337ab7;"><i class="fa fa-chevron-left"></i> Back </a>
                    </h3>
                </div>
            </div>
            @Html.HiddenFor(model => model.REGISTRATION_NO)

            @Html.Hidden("USER_REQUIREMENT_ID")

            <div class="clearfix"></div>
            <div class="alert alert-success alert-dismissable" id="divSuccessMsg" style="display:none;">
                <button type="button" class="close" data-dismiss="alert"
                        aria-hidden="true">
                    &times;
                </button>
                Record Updated Successfully!!!
            </div>

            <div class="row">
                <div class="col-md-12 col-xs-12">
                    <div class="container demo">
                        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                            <div class="panel panel-default">
                                <div class="panel-heading" role="tab" id="headingOne">
                                    <h4 class="panel-title">
                                        <a role="button" data-parent="#accordion">
                                            <i class="fa fa-chevron-down alignright"></i>
                                            <i class="fa fa-align-left"></i> Personal Details
                                            <i class="btn btn-info fa fa-edit alignright" data-toggle="modal" id="personalDetailsModalLink" data-target=".personal-details" title="Edit personal details" style="color: white;background-color: #337ab7; margin-top:-7px;"></i>
                                        </a>

                                    </h4>
                                </div>
                                <div id="collapseOne" class="panel-collapse" role="tabpanel" aria-expanded="true" aria-labelledby="headingOne">
                                    <div class="panel-body">
                                        <div class="col-md-9 col-sm-9 details-panel">

                                            <div class="panel-body" id="divcall">
                                                <div class="col-sm-3 col-md-2 ">
                                                    <label class="control-label">Registration No: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divREGISTRATION_NO">
                                                    @Html.DisplayFor(model => model.REGISTRATION_NO, new { @id = "REGISTRATION_NO", @class = "form-control", @placeholder = "Registration No", @autocomplete = "off" })

                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                    <label class="control-label">Registration Date: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divREGISTRATION_DATE">
                                                    @Html.DisplayFor(model => model.REGISTRATION_DATE, new { @id = "REGISTRATION_DATE", @class = "form-control", @placeholder = "Registration Date", @autocomplete = "off" })
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                <div class="col-sm-3 col-md-2">
                                                    <label class="control-label">Full Name: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divCANDIDATE_NAME">
                                                    @Html.DisplayFor(model => model.Candidate_Name, new { @id = "CANDIDATE_NAME", @class = "form-control", @placeholder = "Full Name", @autocomplete = "off" })
                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                    <label for=" inputemail" class="control-label">Passport No: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divPASSPORT_NUMBER">
                                                    @Html.DisplayFor(model => model.PASSPORT_NUMBER, "", new { @id = "PASSPORT_NUMBER", @class = "form-control", @placeholder = "Passport No", @autocomplete = "off" })
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                <div class="col-sm-3 col-md-2">
                                                    <label class="control-label">Phone No: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divContact_No"style="word-wrap: break-word;">
                                                    @Html.DisplayFor(model => model.Contact_No, new { @id = "Contact_No", @class = "form-control", @placeholder = "Phone No", @autocomplete = "off" })
                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                    <label for=" inputemail" class="control-label">Email Address: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divUSER_EMAIL"style="word-wrap: break-word;">
                                                    @Html.DisplayFor(model => model.USER_EMAIL, "", new { @id = "USER_EMAIL", @class = "form-control", @placeholder = "Email Address", @autocomplete = "off" })
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                <div class="col-sm-3 col-md-2">
                                                    <label class="control-label">Date of Birth: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divDOB">
                                                    @Html.DisplayFor(model => model.DATE_OF_BIRTH, new { @id = "DOB", @class = "form-control", @placeholder = "Date of Birth", @autocomplete = "off" })
                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                    <label for=" inputemail" class="control-label">Age: </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3" id="divCURRENT_AGE">
                                                    @Html.DisplayFor(model => model.Age, "", new { @id = "CURRENT_AGE", @class = "form-control", @placeholder = "Age", @autocomplete = "off" })
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                <div class="col-sm-3 col-md-2">
                                                    <label class="control-label">Download Resume </label>
                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                    @Html.ActionLink("Download", "CandidateResumeDownload", "StatusSearch", new { registrationNo = Model.REGISTRATION_NO }, new { })
                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                </div>
                                                <div class="col-sm-3 col-md-3">
                                                </div>
                                            </div>
                                        </div>
                                        @if (Model.FILE_PATH != null)
                                        {
                                            <div class="panel-body col-md-3 col-sm-3" style="padding-left: 50px;">
                                                <div class="fileinput fileinput-exists image-div" data-provides="fileinput">
                                                    <div class="fileinput-preview fileupload-exists thumbnail image-div" style="max-width: 200px; width:200px; max-height: 150px; line-height: 20px;">
                                                        <img src="@imagepath" class="candidate-img" style="width: 200px; height: 150px;" alt="@Model.Candidate_Name" />
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="panel-body col-md-3 col-sm-3" style="padding-left: 50px;">
                                                <div class="fileinput fileinput-exists" data-provides="fileinput">
                                                    <div class="fileinput-preview fileupload-exists thumbnail" id="imageUploadDiv" style="max-width: 200px; width:200px; max-height: 150px; line-height: 20px;">
                                                        <img src="@noimagepath" class="candidate-img" style="width: 200px; height: 150px;" alt="@Model.Candidate_Name" />
                                                    </div>
                                                </div>
                                            </div>
                                        }


                                        @Html.HiddenFor(model => model.FILE_PATH)
                                        <div class="panel-body col-md-12 col-sm-12">
                                            <a class="btn btn-primary pull-right" data-toggle="modal" id="contact_details_modal_link" title="Edit contact details" style="color: white;background-color: #337ab7;"><i class="fa fa-edit"></i> Edit contact details </a>
                                            <table class="display table datable-grid table-striped table-bordered table-responsive jambo_table" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr class="headings">
                                                        <th>Address</th>
                                                        <th>Country</th>
                                                        <th>State-City</th>
                                                        <th>Village</th>
                                                        <th>Pincode</th>

                                                    </tr>
                                                </thead>
                                                <tbody id="tblAddDetails">
                                                    @if (Model.LST_USER_ADDRESS.Count > 0)
                                                    {
                                                        foreach (var addressItem in Model.LST_USER_ADDRESS)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <span class="user-address">@addressItem.ADDRESS</span>
                                                                    <input type="hidden" class="add_type_id" value=@addressItem.USER_ADDRESS_ID />
                                                                </td>
                                                                <td>
                                                                    @addressItem.USER_COUNTRY
                                                                </td>
                                                                <td>
                                                                    @addressItem.USER_STATE - @addressItem.USER_CITY
                                                                </td>
                                                                <td>
                                                                    @addressItem.USER_VILLAGE
                                                                </td>
                                                                <td>
                                                                    @addressItem.USER_PINCODE
                                                                </td>
                                                            </tr>
                                                        }

                                                    }
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--Current Status-->
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="headingTwo">
                                <h4 class="panel-title">
                                    <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                        <i class="more-less fa fa-chevron-down alignright"></i>
                                        <i class="fa fa-align-left"></i> Current Status Details
                                        <i class="btn btn-info fa fa-edit alignright" data-toggle="modal" id="officialDetailsModalLink" data-target=".current-status" title="Edit official details" style="color: white;background-color: #337ab7;margin-top:-7px;"></i>
                                    </a>
                                </h4>
                            </div>
                            <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                                <div class="panel-body">
                                    <div class="panel-body">
                                        <div class="col-sm-3 col-md-2">
                                            <label class="control-label">Source :</label>
                                        </div>
                                        <div class="col-sm-3 col-md-3 source-name">
                                            @Html.DisplayFor(model => model.SOURCE_NAME, new { @id = "SOURCE", @class = "form-control", @placeholder = "Source", @autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div class="col-sm-3 col-md-2">
                                            <label class="control-label">Branch</label>
                                        </div>
                                        <div class="col-sm-3 col-md-3 branch-name">
                                            @Html.DisplayFor(model => model.BRANCH_NAME, new { @id = "BRANCH_NAME", @class = "form-control", @placeholder = "Availing For", @autocomplete = "off" })
                                        </div>
                                        <div class="col-sm-3 col-md-3">
                                            <label class="control-label">Status</label>
                                        </div>
                                        <div class="col-sm-3 col-md-3 status-name">
                                            @Html.DisplayFor(model => model.STATUS_NAME, new { @id = "STATUS_NAME", @class = "form-control", @autocomplete = "off" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="headingThree">
                                <h4 class="panel-title">
                                    <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                        <i class="more-less fa fa-chevron-down"></i>
                                        <i class="fa fa-align-left"></i> Education & Work Experience Details
                                    </a>
                                </h4>
                            </div>
                            <div id="collapseThree" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                                <div class="panel-body">
                                    <div class="panel-body" id="divcall">
                                        <div class="col-sm-3 col-md-2 ">
                                            <label class="control-label"> Total Experience</label>
                                        </div>
                                        <div class="col-sm-3 col-md-3" id="divTOTAL_EXPERIENCE">
                                            @Html.DisplayFor(model => model.TOTAL_WORK_EXPERIENCE, new { @id = "TOTAL_EXPERIENCE", @class = "form-control", @placeholder = "Total Experience", @autocomplete = "off" })
                                        </div>
                                        <div class="col-sm-3 col-md-3">
                                            <label class="control-label">Gulf Experience</label>
                                        </div>
                                        <div class="col-sm-3 col-md-3" id="divGULF_EXPERIENCE">
                                            @Html.DisplayFor(model => model.TOTAL_GULF_EXPERIENCE, new { @id = "GULF_EXPERIENCE", @class = "form-control", @placeholder = "Gulf Experience", @autocomplete = "off" })
                                        </div>
                                    </div>
                                    @*<div class="panel-body">
                                            <div class="col-sm-3 col-md-2">
                                                <label class="control-label">Current Employment</label>
                                            </div>
                                            <div class="col-sm-3 col-md-3">
                                                @Html.DisplayFor(model => model.COMPANY_NAME, new { @id = "CURRENT_EMPLOYMENT", @class = "form-control", @placeholder = "Current Employment", @autocomplete = "off" })
                                            </div>
                                        </div>*@
                                    <div class="panel-body">
                                        <a class="collapsed btn btn-info alignright" role="button" data-toggle="collapse" id="certificationModalLink" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                            <i class="fa fa-edit" data-toggle="modal" title="Edit certification details" style="color: white;background-color: #5bc0de; margin-top:-7px;"></i>Edit Certification Details
                                        </a>
                                        <table class="display table datable-grid table-striped table-bordered table-responsive jambo_table" cellspacing="0" width="100%">
                                            <thead>
                                                <tr class="headings">
                                                    <th>Certification</th>
                                                    <th>Certification Level</th>
                                                    <th>Institute</th>
                                                    <th>Year of Passing</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tblCertificationDetails">
                                                @if (Model.LST_USER_CERTIFICATION.Count > 0)
                                                {
                                                    foreach (var cert in Model.LST_USER_CERTIFICATION)
                                                    {
                                                <tr>
                                                    <td>@cert.CERTIFICATION</td>
                                                    <td>@cert.CERTIFICATION_LEVEL</td>
                                                    <td>@cert.INSTITUTE</td>
                                                    <td>@cert.YEAR_OF_PASSING</td>
                                                </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>

                                    </div>
                                    <div class="panel-body">
                                        <a class="collapsed btn btn-info alignright" role="button" id="educationModalLink" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                            <i class="fa fa-edit" data-toggle="modal" title="Edit education details" style="color: white;background-color: #5bc0de; margin-top:-7px;"></i>
                                            Edit Education Details
                                        </a>
                                        <table class="display table datable-grid table-striped table-bordered table-responsive jambo_table" cellspacing="0" width="100%">
                                            <thead>
                                                <tr class="headings">
                                                    <th>Education</th>
                                                    <th>Specialiazation</th>
                                                    <th>University Name</th>
                                                    <th>Year of Passing</th>
                                                    <th>Is Highest Education</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tblEducationDetails">
                                                @if (Model.LST_USER_EDUCATION.Count > 0)
                                                {
                                                    foreach (var edu in Model.LST_USER_EDUCATION)
                                                    {
                                                <tr>
                                                    <td>
                                                        @edu.EDUCATION_TYPE
                                                        @Html.Hidden("USER_EDUCATION_ID", edu.USER_EDUCATION_ID, new { @id = "USER_EDUCATION_ID" })
                                                    </td>
                                                    <td>@edu.SPECIALIZATION_TYPE</td>
                                                    <td>@edu.UNIVERSITY_ID</td>
                                                    <td>@edu.UNIVERSITY_YEAR_OF_PASSING</td>
                                                    <td>@(edu.IS_HIGHEST_QUALIFICATION == true ? "Yes" : "No")</td>
                                                </tr>

                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="panel-body">
                                        <a class="collapsed btn btn-info alignright" role="button" id="experienceModalLink" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                            <i class="fa fa-edit" data-toggle="modal" title="Edit user experience details" style="color: white;background-color: #5bc0de; margin-top:-7px;"></i>
                                            Edit Experience Details
                                        </a>
                                        <table class="display table datable-grid table-striped table-bordered table-responsive jambo_table" cellspacing="0" width="100%">
                                            <thead>
                                                <tr class="headings">
                                                    <th>Company</th>
                                                    <th>Role</th>
                                                    <th>Industry</th>
                                                    <th>Work Period</th>
                                                    <th>State-City</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tblWorkExpDetails">
                                                @if (Model.LST_USER_EXPERIENCE.Count > 0)
                                                {
                                                    foreach (var industry in Model.LST_USER_EXPERIENCE)
                                                    {
                                                <tr>
                                                    <td>@industry.COMPANY_NAME</td>
                                                    <td>@industry.DESIGNATION</td>
                                                    <td>@industry.INDUSTRY_TYPE</td>
                                                    <td>@industry.WORK_PERIOD_FROM.Value.Date.ToString("dd/MM/yyyy") - @industry.WORK_PERIOD_TO.Value.Date.ToString("dd/MM/yyyy")</td>
                                                    <td>@industry.STATE_NAME - @industry.CITY_NAME</td>
                                                </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="panel-body">
                                        <a class="collapsed btn btn-info alignright" role="button" id="documentModalLink" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                            <i class="fa fa-edit" data-toggle="modal" title="Edit document details" style="color: white;background-color: #5bc0de; margin-top:-7px;"></i>Edit User Documents
                                        </a>
                                        <table class="display table datable-grid table-striped table-bordered table-responsive jambo_table" cellspacing="0" width="100%" id="tblIndus">
                                            <thead>
                                                <tr class="headings">
                                                    <th>Document Type</th>
                                                    <th>Document</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tblDocumentDetails">
                                                @if (Model.LST_USER_DOCUMENT.Count > 0)
                                                {
                                                    foreach (var doc in Model.LST_USER_DOCUMENT)
                                                    {
                                                <tr>
                                                    <td>@doc.DOCUMENT_TYPE_ID</td>
                                                    <td>
                                                        @{
                                                                    string reportName = string.Empty;
                                                                    string filepath = string.Empty;
                                                                    if (!string.IsNullOrEmpty(doc.DOCUMENT_PATH))
                                                                    {
                                                                        reportName = doc.DOCUMENT_PATH.Substring(15);
                                                                        filepath = Url.Content(Server.MapPath("~/Uploads/CandidateUploadedFiles/" + doc.DOCUMENT_PATH));
                                                                    }
                                                        }
                                                        @Html.ActionLink(reportName, "Download", "Medical", new { filepath = filepath }, new { })
                                                    </td>
                                                </tr>
                                                                        }
                                                                    }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
                                                            }

<!--------------------Modal Panels--------------------------------------->
<!--Modal for personal details-->
<div class="modal fade personal-details" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Personal Details</h4>
            </div>
            <div class="modal-body" style="height:500px;width: 100%;">
                <form action="" method="post" enctype="multipart/form-data">
                    <div class="col-md-12" style="margin-top:10px">
                        <div class="col-md-9">
                            <div id="candidateForm2" data-parsley-validate="" class="form-horizontal form-label-left">
                                <div class="form-group">
                                    <label for="middle-name" class="control-label col-md-4 col-sm-4">Full Name  <span class="required">*</span></label>
                                    <div class="col-md-3 col-sm-3">
                                        @Html.TextBoxFor(model => model.FIRST_NAME, new { @id = "FIRST_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "First Name", @autocomplete = "off", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger", @id = "ErrItem_FIRST_NAME" })
                                    </div>
                                    <div class="col-md-2 col-sm-2">
                                        <input autocomplete="off" class="form-control col-md-7 col-xs-12" id="MIDDLE_NAME" maxlength="50" name="MIDDLE_NAME" placeholder="Middle Name" type="text" value="">
                                    </div>
                                    <div class="col-md-3 col-sm-3">
                                        @Html.TextBoxFor(model => model.LAST_NAME, new { @id = "LAST_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Last Name", @autocomplete = "off", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger", @id = "ErrItem_LAST_NAME" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="middle-name" class="control-label col-md-4 col-sm-4">Father Name</label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.TextBoxFor(model => model.FATHER_NAME, new { @id = "FATHER_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Father Name", @autocomplete = "off", @maxlength = "80" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="middle-name" class="control-label col-md-4 col-sm-4">Mother Name</label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.TextBoxFor(model => model.MOTHER_NAME, new { @id = "MOTHER_NAME", @class = "form-control col-md-7 col-xs-12", @placeholder = "Mother Name", @autocomplete = "off", @maxlength = "80" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4">Gender <span class="required">*</span>  </label>
                                    <div class="col-md-6 col-sm-6">
                                        @Html.DropDownListFor(model => model.GENDER_CODE, ViewData["GetGender"] as SelectList, Model.GENDER_NAME, new { @id = "GENDER_CODE", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.GENDER_CODE, "", new { @class = "text-danger", @id = "ErrItem_GENDER_CODE" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4" for="contactPerson">Date of Birth <span class="required">*</span> </label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.TextBoxFor(model => model.DATE_OF_BIRTH, "{0:dd/MM/yyyy}", new { @id = "DATE_OF_BIRTH", @class = "form-control", @placeholder = "Date of Birth", @autocomplete = "off", @maxlength = "20" })
                                        @Html.ValidationMessageFor(model => model.DATE_OF_BIRTH, "", new { @class = "text-danger", @id = "ErrItem_DATE_OF_BIRTH" })
                                        <span id="textBoxName"></span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4">Place of Birth <span class="required">*</span></label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.TextBoxFor(model => model.PLACE_OF_BIRTH, new { @id = "PLACE_OF_BIRTH", @class = "form-control", @placeholder = "Place of Birth", @autocomplete = "off", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.PLACE_OF_BIRTH, "", new { @class = "text-danger", @id = "ErrItem_PLACE_OF_BIRTH" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4">Martial Status</label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.DropDownListFor(model => model.MARITAL_STATUS_ID, ViewData["GetMaritalStatus"] as SelectList, Model.MARITAL_STATUS, new { @id = "MARITAL_STATUS_ID", @class = "form-control", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4">Nationality <span class="required">*</span></label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.DropDownListFor(model => model.NATIONALITY_ID, ViewData["GetNationality"] as SelectList, Model.NATIONALITY, new { @id = "NATIONALITY_ID", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.NATIONALITY_ID, "", new { @class = "text-danger", @id = "ErrItem_NATIONALITY_ID" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4">Current Location <span class="required">*</span></label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.DropDownListFor(model => model.CURRENT_LOCATION, ViewData["GetLocation"] as SelectList, Model.CURRENT_LOCATION, new { @id = "CURRENT_LOC", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.CURRENT_LOCATION, "", new { @class = "text-danger", @id = "ErrItem_CURRENT_LOCATION" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-4 col-sm-4">Religion<span class="required">*</span></label>
                                    <div class="col-md-8 col-sm-8">
                                        @Html.DropDownListFor(model => model.RELIGION_ID, ViewData["GetReligion"] as SelectList, Model.RELIGION_NAME, new { @id = "RELIGION_ID", @class = "form-control", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.RELIGION_ID, "", new { @class = "text-danger", @id = "ErrItem_RELIGION_ID" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            @if (Model.FILE_PATH != null)
                            {
                                <div class="fileinput fileinput-exists" data-provides="fileinput">
                                    <div class="fileinput-preview fileupload-exists thumbnail" id="imageUploadDiv" style="width:200px; max-width: 200px; max-height: 150px; line-height: 20px;">
                                        <img src="@imagepath" alt="@Model.Candidate_Name" />
                                    </div>
                                    <div>
                                        <span class="btn btn-default btn-file"><span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span><input type="file" name="..." id="SaveImage"></span>
                                        <a href="#" class="btn btn-default fileinput-exists removeImg" data-dismiss="fileinput">Remove</a>
                                    </div>
                                </div>
                            }

                            else
                            {
                                <div class="fileinput fileinput-exists" data-provides="fileinput">
                                    <div class="fileinput-preview fileupload-exists thumbnail" id="imageUploadDiv" style="max-width: 200px; max-height: 150px; line-height: 20px; width:200px;">
                                        <img src="@noimagepath" id="emptyImg" />
                                    </div>
                                    <div>
                                        <span class="btn btn-default btn-file">
                                            <span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span>
                                            <input type="file" name="..." id="SaveImage">
                                        </span>
                                        <a href="#" class="btn btn-default fileinput-exists removeImg" data-dismiss="fileinput">Remove</a>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="UpdatePersonalDetails" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>
<!----- end personal Details----------->
<!----- current-status--->
<div class="modal fade current-status" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Current Status Details</h4>
            </div>
            <div class="modal-body" style="height:200px;width: 100%;">
                <div id="candidateForm1" data-parsley-validate class="form-horizontal form-label-left">
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3">Branch <span class="required">*</span></label>
                        <div class="col-md-6 col-sm-6">
                            @Html.DropDownListFor(model => model.BRANCH_CODE, ViewData["GetBranch"] as SelectList, "Select Branch", new { @id = "BRANCH_CODE", @class = "form-control", @autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.BRANCH_CODE, "", new { @class = "text-danger", @id = "ErrItem_BRANCH_CODE" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3">Source <span class="required">*</span></label>
                        <div class="col-md-6 col-sm-6">
                            @Html.DropDownListFor(model => model.SOURCE_ID, ViewData["GetSource"] as SelectList, "Select Source", new { @id = "SOURCE_ID", @class = "form-control", @autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.SOURCE_ID, "", new { @class = "text-danger", @id = "ErrItem_SOURCE_ID" })
                            <div id="divOtherSource" style="display:none;margin-top: 10px;">
                                @Html.DropDownListFor(model => model.OTHER_SOURCE, new SelectList(""), "Select Source", new { @id = "OTHER_SOURCE", @class = "form-control", @style = "width:100%;", @autocomplete = "off" })
                            </div>
                            <div id="divReferrer" style="display:none;margin-top: 10px;">
                                @Html.TextBoxFor(model => model.REFERRER_NAME, new { @id = "REFERRER_NAME", @class = "form-control", @placeholder = "Referrer Name", @autocomplete = "off", @maxlength = "20" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3">Status <span class="required">*</span></label>
                        <div class="col-md-6 col-sm-6">
                            @Html.DropDownListFor(model => model.STATUS_ID, ViewData["GetStatus"] as SelectList, "Select Status", new { @id = "STATUS_ID", @class = "form-control", @autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.STATUS_ID, "", new { @class = "text-danger", @id = "ErrItem_STATUS_ID" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3">Login Access </label>
                        <div class="col-md-6 col-sm-6">
                            @{
                                List<SelectListItem> listLoginAccess = new List<SelectListItem>();
                                listLoginAccess.Add(new SelectListItem
                                {
                                    Text = "Yes",
                                    Value = "Yes"
                                });
                                listLoginAccess.Add(new SelectListItem
                                {
                                    Text = "No",
                                    Value = "No"
                                });
                            }
                            @Html.DropDownListFor(model => model.LOGIN_ACCESS, new SelectList(listLoginAccess, "Value", "Text", "No"), "--Select Login Access--", new { @id = "LOGIN_ACCESS", @class = "form-control", @autocomplete = "off", @disabled = "disabled" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="submitEmployeeOfficialDetails">Save changes</button>
            </div>
        </div>
    </div>
</div>
<!----- current-status--->
<!--education modal-->
<div class="modal fade education-details" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Education Details</h4>
            </div>
            <div class="modal-body" style="height:440px;width: 100%;">
                <div id="candidatecertificationdetails" data-parsley-validate="" class="form-horizontal form-label-left">
                    @Html.Partial("~/Views/Shared/_Education.cshtml")
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="submitEducationDetails" class="btn btn-success">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<!--education modal-->
<!--certification modal-->
<div class="modal fade certification-details" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Certification Details</h4>
            </div>
            <div class="modal-body" style="height:440px;width: 100%;">
                <div id="candidatecertificationdetails" data-parsley-validate="" class="form-horizontal form-label-left">
                    @Html.Partial("~/Views/Shared/_Certification.cshtml")
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="submitCertificationDetails" class="btn btn-success">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<!--certification modal-->
<!--Address/Contact/Email Modal-->
<div class="modal fade contact_details" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Contact Details</h4>
            </div>
            <div class="modal-body" style="height:500px;width: 100%;">
                <div id="candidatecontactdetails" data-parsley-validate="" class="form-horizontal form-label-left">
                    @Html.Partial("~/Views/Shared/_Address.cshtml")
                    @Html.Partial("~/Views/Shared/_Contact.cshtml")
                    @Html.Partial("~/Views/Shared/_Email.cshtml")
                    <div class="form-group">
                        <div class="row">
                            <label for="middle-name" class="control-label col-md-3 col-sm-3">Website</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(model => model.WEBSITE, new { @id = "WEBSITE", @class = " form-control col-md-7 col-xs-12", @placeholder = "Website", @autocomplete = "off" })

                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label for="middle-name" class="control-label col-md-3 col-sm-3">Skype</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(model => model.SKYPE, new { @id = "SKYPE", @class = " form-control col-md-7 col-xs-12", @placeholder = "Skype", @autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="control-label col-md-3 col-sm-3">Remark</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextAreaFor(model => model.CONTACT_REMARK, new { @id = "CONTACT_REMARK", @class = " form-control col-md-7 col-xs-12", @placeholder = "Remark", @autocomplete = "off" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="submitContactDetails" class="btn btn-success">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<!--Address/Contact/Email Modal-->
<!--Document Modal Start-->
<div class="modal fade user-documents">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Document Details</h4>
            </div>
            <div class="modal-body" style="height:450px;width: 100%;">
                <div data-parsley-validate="" class="form-horizontal form-label-left">
                    @Html.Partial("~/Views/Shared/_Document.cshtml")
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="submitDocumentDetails" class="btn btn-success">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<!--Document Modal End-->
<!--Experience Modal Start-->
<div class="modal fade user-experience">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Experience Details</h4>
            </div>
            <div class="modal-body" style="height:500px;width: 100%;">
                <div data-parsley-validate="" class="form-horizontal form-label-left">
                    @Html.Partial("~/Views/Shared/_Experience.cshtml")

                    <div class="form-group career">
                        <div class="row">
                            <label class="control-label col-md-3 col-sm-3">Total Work Experience</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(model => model.TOTAL_WORK_EXPERIENCE, new { @id = "TOTAL_WORK_EXPERIENCE", @class = "form-control", @placeholder = "Total Work Experience", @autocomplete = "off", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group career">
                        <div class="row">
                            <label class="control-label col-md-3 col-sm-3">Total Gulf Experience</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(model => model.TOTAL_GULF_EXPERIENCE, new { @id = "TOTAL_GULF_EXPERIENCE", @class = "form-control", @placeholder = "Total Gulf Experiemce", @autocomplete = "off", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="control-label col-md-3 col-sm-3">Skills</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextBoxFor(model => model.SKILLS, new { @id = "SKILLS", @class = "form-control", @placeholder = "Skills", @autocomplete = "off" })

                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <label class="control-label col-md-3 col-sm-3">Remark</label>
                            <div class="col-md-6 col-sm-6">
                                @Html.TextAreaFor(model => model.WORK_REMARK, new { @id = "WORK_REMARK", @class = "form-control", @placeholder = "Remark", @autocomplete = "off" })

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button id="submitExpDetails" class="btn btn-success">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<!--Experience Modal End-->
<!--end of Current Status Modal-->

<script type="text/javascript">
    var addressCollection = new Array();
    var contactCollection = new Array();
    var emailCollection = new Array();
    var educationCollection = new Array();
    var certificationCollection = new Array();
    var experienceCollection = new Array();
    var documentCollection = new Array();
    var languageCollection = new Array();

    //load personal detail partial view
    $(document).on("click", "#personalDetailsModalLink", function () {
        var urlPath = "@Url.Action("LoadCandidatePersonalDetails", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                if (data != null) {
                    $("#GENDER_CODE").chosen({ width: '100%' });
                    $("#MARITAL_STATUS_ID").chosen({ width: '100%' });
                    $("#NATIONALITY_ID").chosen({ width: '100%' });
                    $("#CURRENT_LOC").chosen({ width: '100%' });
                    $("#RELIGION_ID").chosen({ width: '100%' });
                    bindPersonlaDetailsToModalPopup(data);
                    $(".personal-details").modal("show");
                }
            },
            error: function (data) {
                alert(data)
            }
        });
    });

    function bindPersonlaDetailsToModalPopup(candidate) {

        //Personal
        $("#FIRST_NAME").val(candidate.FIRST_NAME);
        $("#MIDDLE_NAME").val(candidate.MIDDLE_NAME);
        $("#LAST_NAME").val(candidate.LAST_NAME);
        $("#FATHER_NAME").val(candidate.FATHER_NAME);
        $("#MOTHER_NAME").val(candidate.MOTHER_NAME);
        $("#GENDER_CODE").val(candidate.GENDER_CODE).trigger('change');

        $("#DATE_OF_BIRTH").val(ConvertJsonDate(candidate.DATE_OF_BIRTH));
        $("#PLACE_OF_BIRTH").val(candidate.PLACE_OF_BIRTH);
        $("#MARITAL_STATUS_ID").val(candidate.MARITAL_STATUS_ID).trigger('change');
        $("#NATIONALITY_ID").val(candidate.NATIONALITY_ID).trigger('change');
        $("#CURRENT_LOC").val(candidate.CURRENT_LOCATION);
        $("#RELIGION_ID").val(candidate.RELIGION_ID).trigger('change');

        //File_Path
        $("#FILE_PATH").val(candidate.FILE_PATH);
    }

    function ConvertJsonDate(date) {
        if (date != null) {
            var dateString = date.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = ("0" + (currentTime.getMonth() + 1)).slice(-2);
            var day = ("0" + (currentTime.getDate() + 1)).slice(-2);
            var year = currentTime.getFullYear();
            var date = day + "/" + month + "/" + year;
            return date;
        }
        else
            return "";
    }


   
    //load contact details partial view
    $(document).on("click", "#contact_details_modal_link", function () {
        var urlPath = "@Url.Action("LoadContactDetailsPartialView", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                //$("#ADDRESS_TYPE_ID").select2({ width: '115%' });
                //$("#COUNTRY_CODE").select2({ width: '100%' });
                //$("#STATE_CODE").select2({ width: '100%' });
                //$("#CITY_CODE").select2({ width: '100%' });
                //$("#CONTACT_TYPE_ID").select2({ width: '100%' });

                bindContactDetails(data);

                $(".contact_details").modal("show");
            },
            error: function (data) {
                alert(data)
            }
        });
    });

    function bindContactDetails(contact) {

        $("#WEBSITE").val(contact.candidate.WEBSITE);
        $("#SKYPE").val(contact.candidate.SKYPE);
        $("#CONTACT_REMARK").val(contact.candidate.CONTACT_REMARK);

        addressCollection = [];
        contactCollection = [];
        emailCollection = [];
        $("#tblchild").empty();
        $("#tblcontact").empty();
        $("#tblemail").empty();

        //Address Details Bind
        var row = "";
        _.each(contact.candidate.LST_USER_ADDRESS, function (value) {

            row += "<tr id ='tr_old_row_add_" + value.ADDRESS_TYPE_ID + "'><td><span class='user-address'>" + value.ADDRESS + "</span></td><td>" + value.USER_COUNTRY + "</td><td>" + value.USER_STATE + "-" + value.USER_CITY + "</td><td>" + value.USER_VILLAGE + "</td><td>" + value.USER_PINCODE + "</td> "
            row += '<td><a onclick="fnDeleteRow(' + "'" + value.ADDRESS_TYPE_ID + "'" + ')" href="javascript:void()" <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

            var addJson = { "ADDRESS_TYPE_ID": value.ADDRESS_TYPE_ID, "ADDRESS": value.ADDRESS, "CITY_CODE": value.CITY_CODE, "USER_VILLAGE": value.VILLAGE, "USER_PINCODE": value.PIN_CODE, "COUNTRY_CODE": value.COUNTRY_CODE, "STATE_CODE": value.STATE_CODE, "IsNew": "true", "USER_ADDRESS_ID": value.USER_ADDRESS_ID };

            addressCollection.push(addJson);
        });
        $("#tblchild").append(row);

        //Contact Details Bind
        var row = "";
        var row_id = 1;
        _.each(contact.candidate.LST_USER_CONTACT, function (value) {

            row += "<tr id ='tr_old_row_cont_" + value.CONTACT_TYPE_ID + "'><td >" + row_id + " </td><td>" + value.CONTACT_TYPE + "</td><td><span class='user-contact'>" + value.CONTACT_NO + "</td>";
            row += '<td><a onclick="fnDeleteContact(' + value.CONTACT_TYPE_ID + ')" href="javascript:void()" <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

            var addJson = { "CONTACT_TYPE_ID": value.CONTACT_TYPE_ID, "CONTACT_NO": value.CONTACT_NO, "IsNew": "true", "USER_CONTACT_ID": value.USER_CONTACT_ID };

            contactCollection.push(addJson);
            row_id++;
        });
        $("#tblcontact").append(row);

        //Email Details Bind
        var row = "";
        var row_id = 1;
        _.each(contact.candidate.LST_USER_EMAIL, function (value) {
            row += "<tr id ='tr_old_row_email_" + value.USER_EMAIL + "'><td >" + row_id + " </td><td><span class='user-email'>" + value.USER_EMAIL + "</td>";
            //row += '<td><a class="delete_email" onclick="fnDeleteEmail(' + value.USER_EMAIL + ')" href="javascript:void()" <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';
            row += '<td><a href="javascript:void()" <span aria-hidden="true" class="delete_email glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

            var addJson = { "USER_EMAIL": value.USER_EMAIL, "IsNew": "true", "USER_EMAIL_ID": value.USER_EMAIL_ID };

            emailCollection.push(addJson);
            row_id++;
        });
        $("#tblemail").append(row);

    }

    //load certification partial view
    $(document).on("click", "#certificationModalLink", function () {
        var urlPath = "@Url.Action("LoadCertificationPartialView", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                //$("#CERTIFICATION_ID").select2({ width: '100%' });
                if (data != null) {
                    certificationCollection = [];
                    $("#tblcertification").empty();

                    var row = "";
                    var row_id = 1;
                    _.each(data, function (value) {
                        if (value.CERTIFICATION_ID != null && value.CERTIFICATION_ID != "") {
                            row += "<tr id ='tr_old_row_cert_" + value.CERTIFICATION_ID + "'><td>" + row_id + " </td><td>" + value.CERTIFICATION + "</td><td>" + value.CERTIFICATION_LEVEL + "</td><td>" + value.INSTITUTE + "</td><td class='yearOfPassing'>" + value.YEAR_OF_PASSING + "</td>";
                            row += '<td><a onclick="fnDeleteCertification(' + value.CERTIFICATION_ID + ')" href="javascript:void()" <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

                            var addJson = { "CERTIFICATION_ID": value.CERTIFICATION_ID, "CERTIFICATION": value.CERTIFICATION, "OTHER_CERTIFICATION": "", "IsNew": "true", "CERTIFICATION_LEVEL": value.CERTIFICATION_LEVEL, "INSTITUTE": value.INSTITUTE, "YEAR_OF_PASSING": value.YEAR_OF_PASSING, "USER_CERTIFICATION_ID": value.USER_CERTIFICATION_ID };

                            certificationCollection.push(addJson);
                            row_id++;
                        }
                    });

                    $("#tblcertification").append(row);
                    $(".certification-details").modal("show");
                }
            },

            error: function (data) {
                alert(data)
            }
        });
    });

    //load education partial view
    $(document).on("click", "#educationModalLink", function () {
        var urlPath = "@Url.Action("LoadEducationPartialView", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                //$("#EDUCATION_TYPE_ID").select2({ width: '100%' });
                //$("#SPECIALIZATION_TYPE_ID").select2({ width: '100%' });
                if (data != null) {
                    educationCollection = [];
                    $("#tbleducation").empty();

                    var row = "";
                    var row_id = 1;
                    _.each(data, function (value) {
                        if (value.EDUCATION_TYPE_ID != null) {
                            var highestqual = "No";
                            if (value.IS_HIGHEST_QUALIFICATION != null)
                                highestqual = "Yes";
                            row += "<tr id ='tr_old_row_edu_" + value.EDUCATION_TYPE_ID + "'><td >" + row_id + " </td><td>" + value.EDUCATION_TYPE + "</td><td>" + value.SPECIALIZATION_TYPE + "</td><td>" + value.UNIVERSITY_ID + "</td><td>" + value.UNIVERSITY_YEAR_OF_PASSING + "</td><td>" + highestqual + "</td>";
                            row += '<td><a onclick="fnDeleteEducation(' + value.EDUCATION_TYPE_ID + ')" href="javascript:void()" <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

                            var addJson = { "EDUCATION_TYPE_ID": value.EDUCATION_TYPE_ID, "SPECIALIZATION_TYPE_ID": value.SPECIALIZATION_TYPE_ID, "IsNew": "true", "UNIVERSITY_ID": value.UNIVERSITY_ID, "UNIVERSITY_YEAR_OF_PASSING": value.UNIVERSITY_YEAR_OF_PASSING, "IS_HIGHEST_QUALIFICATION": value.IS_HIGHEST_QUALIFICATION, "USER_EDUCATION_ID": value.USER_EDUCATION_ID };

                            educationCollection.push(addJson);
                            row_id++;
                        }
                    });

                    $("#tbleducation").append(row);
                    $(".education-details").modal("show");
                }
            },
            error: function (data) {
                alert(data)
            }
        });

        function toggleIcon(e) {
            $(e.target)
                .prev('.panel-heading')
                .find(".more-less")
                .toggleClass('glyphicon-plus glyphicon-minus');
        }
        $('.panel-group').on('hidden.bs.collapse', toggleIcon);
        $('.panel-group').on('shown.bs.collapse', toggleIcon);

    });


    //Load Document Partial View
    $(document).on("click", "#documentModalLink", function () {
        var urlPath = "@Url.Action("LoadDocumentsPartialView", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                if (data != null) {
                    documentCollection = [];
                    $("#tbldoc").empty();

                    var row = "";
                    var row_id = 1;
                    _.each(data.LST_USER_DOCUMENT, function (value) {
                        if (value.DOCUMENT_TYPE_ID != null) {
                            row += "<tr id ='tr_old_row_doc_" + row_id + "'><td >" + row_id + " </td><td>" + value.DOCUMENT_TYPE_ID + "</td><td class='document-path'>" + value.DOCUMENT_PATH + "</td>";
                            row += '<td><a class="deleteDocument" href="javascript:void()"> <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

                            var addJson = { "DOCUMENT_TYPE_ID": value.DOCUMENT_TYPE_ID, "DOCUMENT_PATH": value.DOCUMENT_PATH, "IsNew": "true", "DOCUMENT_ID": value.DOCUMENT_ID };

                            documentCollection.push(addJson);
                            row_id++;
                        }
                    });

                    $("#tbldoc").append(row);
                    $(".user-documents").modal("show");
                }
            },

            error: function (data) {
                alert(data)
            }
        });

    });

    //Load Experience Partial View
    $(document).on("click", "#experienceModalLink", function () {
        var urlPath = "@Url.Action("LoadExpPartialView", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                //$('#USER_COMPANY_NAME').select2({ width: '100%' });
                //$('#DESIGNATION_ID').select2({ width: '100%' });
                //$('#INDUSTRY_ID').select2({ width: '100%' });
                //$('#WORK_EXP_COUNTRY_CODE').select2({ width: '100%' });
                //$('#WORK_EXP_STATE_CODE').select2({ width: '100%' });
                //$('#WORK_CITY_CODE').select2({ width: '100%' });
                $(".user-experience").modal("show");
                $("#WORK_PERIOD_FROM").datepicker({
                    maxDate: "-1D",
                    changeMonth: true,
                    changeYear: true, yearRange: "-70:+0",
                    numberOfMonths: 2,
                    dateFormat: "dd/mm/yy",
                    onClose: function (selectedDate) {
                        $("#WORK_PERIOD_TO").datepicker("option", "minDate", selectedDate);
                    }
                });
                $("#WORK_PERIOD_TO").datepicker({
                    maxDate: "D",
                    changeMonth: true,
                    changeYear: true, yearRange: "-70:+10",
                    numberOfMonths: 2,
                    dateFormat: "dd/mm/yy",
                    onClose: function (selectedDate) {
                        $("#WORK_PERIOD_FROM").datepicker("option", "maxDate", selectedDate);
                    }
                });

                if (data != null) {
                    experienceCollection = [];
                    $("#tblwork").empty();

                    var row = "";
                    var row_id = 1;
                    _.each(data.LST_USER_EXPERIENCE, function (value) {
                        if (value.USER_COMPANY_NAME != null && value.USER_COMPANY_NAME != "") {
                            row += "<tr id ='tr_old_row_exp_" + row_id + "'><td >" + row_id + " </td><td class='company-name'>" + value.COMPANY_NAME + "<input type='hidden' class='user_company_name' value='" + value.USER_COMPANY_NAME + "' /><input type='hidden' class='user_work_period_from' value='" + ConvertJsonDate(value.WORK_PERIOD_FROM) + "' /></td><td>" + value.DESIGNATION + "</td>";
                            row += "<td>" + value.INDUSTRY_TYPE + "</td><td data-work-period-from = '" + ConvertJsonDate(value.WORK_PERIOD_FROM) + "'>" + ConvertJsonDate(value.WORK_PERIOD_FROM) + "-" + ConvertJsonDate(value.WORK_PERIOD_TO) + "</td>";
                            row += "<td>" + value.STATE_NAME + "-" + value.CITY_NAME + "</td>";
                            row += '<td><a class="delete-exp" href="javascript:void()"> <span aria-hidden="true" class="glyphicon glyphicon-trash" title="Delete"></span></a></td></tr>';

                            var addJson = { "EXPERIENCE_ID": value.EXPERIENCE_ID, "USER_COMPANY_NAME": value.USER_COMPANY_NAME, "INDUSTRY_ID": value.INDUSTRY_ID, "IsNew": "true", "DESIGNATION_ID": value.DESIGNATION_ID, "WORK_PERIOD_FROM": ConvertJsonDate(value.WORK_PERIOD_FROM), "WORK_PERIOD_TO": ConvertJsonDate(value.WORK_PERIOD_TO), "WORK_CITY_CODE": value.WORK_CITY_CODE, "IS_CURRENT_COMPANY": value.IS_CURRENT_STATUS, "OTHER_COMPANY": "", "COUNTRY_CODE": value.COUNTRY_CODE };

                            experienceCollection.push(addJson);
                            row_id++;

                            $('#TOTAL_WORK_EXPERIENCE').val(value.TOTAL_WORK_EXPERIENCE);
                            $('#TOTAL_GULF_EXPERIENCE').val(value.TOTAL_GULF_EXPERIENCE);
                            $('#SKILLS').val(value.SKILLS);
                            $('#WORK_REMARK').val(value.REMARK);
                        }
                    });

                    $("#tblwork").append(row);
                }
                else {
                    $('#TOTAL_WORK_EXPERIENCE').val("");
                    $('#TOTAL_GULF_EXPERIENCE').val("");
                    $('#SKILLS').val("");
                    $('#WORK_REMARK').val("");
                }

            },

            error: function (data) {
                alert(data)
            }
        });

    });

    //load official details view

    $(document).on("click", "#officialDetailsModalLink", function () {
        var urlPath = "@Url.Action("LoadCandidatePersonalDetails", "StatusSearch")";
        var registrationNo = $("#REGISTRATION_NO").val();
        $.ajax({
            url: urlPath,
            type: "GET",
            data: { registrationNo: registrationNo },
            success: function (data) {
                $("#LOGIN_ACCESS").chosen({ width: '100%' });
                $("#BRANCH_CODE").chosen({ width: '100%' });
                $("#SOURCE_ID").chosen({ width: '100%' });
                $("#STATUS_ID").chosen({ width: '100%' });
                $("#OTHER_SOURCE").chosen({ width: '100%' });

                var source = (data.SOURCE_ID + ":" + data.OTHER_SOURCE + ";" + data.REFERRER_NAME);
                $("#OTHER_SOURCE").val(data.OTHER_SOURCE).trigger("chosen:updated").change();
                $("#REFERRER_NAME").val(data.REFERRER_NAME);
                $("#SOURCE_ID").val(data.SOURCE_ID).trigger("chosen:updated", source).change();
               
                $("#USER_STATUS_ID").val(data.STATUS_ID).trigger("chosen:updated");
                $("#LOGIN_ACCESS").val("false").trigger("chosen:updated");
                $("#REMARK").val(data.REMARK);

                $(".current-status").modal("show");
            },
            error: function (data) {
                alert(data)
            }
        });
    });

    function UploadAttachment(file, uploadFrom) {
        var path = "";
        if (file.length > 0) {
            var isvalid = checkImagefile(file);
            if (isvalid) {
                var data = new FormData();

                // Add the uploaded image content to the form data collection
                data.append("UploadedImage", file[0]);
                data.append("UploadFrom", uploadFrom);

                // Make Ajax request with the contentType = false, and procesDate = false
                var ajaxRequest = $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadImageFile", "StatusSearch")',
                    contentType: false,
                    processData: false,
                    data: data
                });

                ajaxRequest.done(function (xhr, textStatus) {
                    // Do other operation
                    path = xhr;
                    $("#FILE_PATH").val(path);
                });
            }
        }
        else {
            path = "";
            $("#FILE_PATH").val(path);

        }
    }

    //call other source
    $(document).ready(function () {
        $("#SaveImage").change(function (e) {
            var file = e.target.files;
            var path = UploadAttachment(file, "Employee");
        });

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

    });


    //GetOtherSource
    $("#SOURCE_ID").change(function (e,value) {
        $("#divReferrer").css("display", "none");
        $("#divOtherSource").css("display", "none");
        var source = $("#SOURCE_ID").val();
        if (source == "5" || source == "8") {
            var referrer = $("#REFERRER_NAME").val();
            $("#REFERRER_NAME").val(referrer);
            $("#divReferrer").css("display", "block");
            $("#divOtherSource").css("display", "none");
        }
        else if (source == "2" || source == "3" || source == "4" || source == "6") {
            var othersource = $("#OTHER_SOURCE").val();
            $("#divOtherSource").css("display", "block");
            $("#divReferrer").css("display", "none");
            $("#OTHER_SOURCE").empty();
            $.ajax({
                type: 'POST',
                url: '/Candidate/GetOtherSourceBySource', // we are calling json method
                dataType: 'json',
                data: { sourceId: $("#SOURCE_ID").val() },
                success: function (states) {
                    if (!states.isSessionActive) {
                        window.location.href = '@Url.Action("LogOut", "Login")';
                        return false;
                    }
                    $("#OTHER_SOURCE").append('<option value="0">--Select Other Source--</option>');
                    $.each(states.selectList, function (i, state) {
                        $("#OTHER_SOURCE").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    }); // here we are adding option for States

                    $("#OTHER_SOURCE").val(othersource).trigger("chosen:updated");
                },
                error: function (ex) {
                    $("#OTHER_SOURCE").append('<option >--Select Other Source--</option>');
                }
            });
            return false;
        }
    });

</script>
<style>
    .modal-body {
        display: inline-block;
        overflow-y: auto;
    }

    .requirement-link {
        cursor: pointer;
    }
    /* Important part */
    .modal-dialog {
        overflow-y: initial !important;
    }
</style>